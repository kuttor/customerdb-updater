#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
customerdb-updater.py
Import deploy details into the CustomerDB

Usage:
  customerdb-update -j <job_num> -u <username> -p <password>
  customerdb-update --help | --version

Options:
  -h --help           Show this screen
  -v --version        Show version information
  -j --job-number     Input Jenkins job-number
  -u --username       Input Jenkins username
  -p --password       Input Jenkins password
"""
__author__ = 'Andrew Kuttor'
__email__ = 'andrew_kuttor@intuit.com'
__version__ = '1.0.0'

from docopt import docopt, DocoptExit
from bs4 import BeautifulSoup as bs
from requests import get


def html_table_scraper(job, usr, pwd):
    """Scrapes Jenkins environment variable page by job number."""
    url = "http://pprddpsos400.corp.intuit.net:8080/job/" \
          "Pipeline%20-%20IDPS%20Operations/{}/injectedEnvVars/".format(job)

    html = get(url, auth=(usr, pwd))
    soup = bs(html.content, 'html.parser')
    return soup


def to_dict(soup):
    """Converts scraped HTML tables to key-value dictionay."""
    list = [[cell.get_text().strip()
        for cell in row.find_all(['th', 'td'])]
        for row in soup.find_all('tr')]

    kv = {}
    for item in list:
        str_item = str(item)
        if ',' in str_item:
            key,value = str_item.split(',')
            kv[key] = value
    return kv


# The island of misfit toys
def main():
    """Main function to encapsulate script."""
    try:
        args = docopt(__doc__, version='CustomerDB-Update - v1.0')

        # Convert args to vars
        job_num = args['<job_num>']
        username = args['<username>']
        password = args['<password>']

        # Kickoff
        raw = html_table_scraper(job_num, username, password)
        print to_dict(raw)

    except DocoptExit as e:
        print(e.message)


# Let there be truth
if __name__ == "__main__":
    main()
